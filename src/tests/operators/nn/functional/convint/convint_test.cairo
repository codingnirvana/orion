use core::debug::PrintTrait;
use array::ArrayTrait;
use array::SpanTrait;
use traits::Into;

use orion::operators::tensor::core::{TensorTrait, ExtraParams};
use orion::operators::tensor::implementations::impl_tensor_i32::Tensor_i32;
use orion::numbers::signed_integer::{integer_trait::IntegerTrait, i32::i32};
use orion::operators::nn::core::NNTrait;
use orion::operators::nn::implementations::impl_nn_i32::NN_i32;


#[test]
#[available_gas(200000000)]
fn convint_test() {
    // SET INPUTS
    let mut shape = ArrayTrait::<usize>::new();
    let n_channels = 3;
    let height = 5;
    let weight = 5;
    let n_filters = 2;
    let kernel_size = 3;
    
    shape.append(height);
    shape.append(weight);
    shape.append(n_channels);

    let mut data = ArrayTrait::new(); // 5, 5 , 3 
    data.append(i32 { mag: 77, sign: false });
    data.append(i32 { mag: 895, sign: false });
    data.append(i32 { mag: 190, sign: false });
    data.append(i32 { mag: 304, sign: false });
    data.append(i32 { mag: 193, sign: false });
    data.append(i32 { mag: 618, sign: false });
    data.append(i32 { mag: 880, sign: false });
    data.append(i32 { mag: 508, sign: false });
    data.append(i32 { mag: 517, sign: false });
    data.append(i32 { mag: 634, sign: false });
    data.append(i32 { mag: 613, sign: false });
    data.append(i32 { mag: 437, sign: false });
    data.append(i32 { mag: 853, sign: false });
    data.append(i32 { mag: 147, sign: false });
    data.append(i32 { mag: 935, sign: false });
    data.append(i32 { mag: 627, sign: false });
    data.append(i32 { mag: 966, sign: false });
    data.append(i32 { mag: 542, sign: false });
    data.append(i32 { mag: 977, sign: false });
    data.append(i32 { mag: 512, sign: false });
    data.append(i32 { mag: 647, sign: false });
    data.append(i32 { mag: 150, sign: false });
    data.append(i32 { mag: 762, sign: false });
    data.append(i32 { mag: 889, sign: false });
    data.append(i32 { mag: 697, sign: false });
    data.append(i32 { mag: 529, sign: false });
    data.append(i32 { mag: 156, sign: false });
    data.append(i32 { mag: 260, sign: false });
    data.append(i32 { mag: 162, sign: false });
    data.append(i32 { mag: 542, sign: false });
    data.append(i32 { mag: 69, sign: false });
    data.append(i32 { mag: 484, sign: false });
    data.append(i32 { mag: 893, sign: false });
    data.append(i32 { mag: 115, sign: false });
    data.append(i32 { mag: 170, sign: false });
    data.append(i32 { mag: 578, sign: false });
    data.append(i32 { mag: 417, sign: false });
    data.append(i32 { mag: 205, sign: false });
    data.append(i32 { mag: 356, sign: false });
    data.append(i32 { mag: 184, sign: false });
    data.append(i32 { mag: 367, sign: false });
    data.append(i32 { mag: 447, sign: false });
    data.append(i32 { mag: 614, sign: false });
    data.append(i32 { mag: 710, sign: false });
    data.append(i32 { mag: 730, sign: false });
    data.append(i32 { mag: 147, sign: false });
    data.append(i32 { mag: 492, sign: false });
    data.append(i32 { mag: 347, sign: false });
    data.append(i32 { mag: 858, sign: false });
    data.append(i32 { mag: 332, sign: false });
    data.append(i32 { mag: 182, sign: false });
    data.append(i32 { mag: 824, sign: false });
    data.append(i32 { mag: 836, sign: false });
    data.append(i32 { mag: 144, sign: false });
    data.append(i32 { mag: 599, sign: false });
    data.append(i32 { mag: 783, sign: false });
    data.append(i32 { mag: 924, sign: false });
    data.append(i32 { mag: 328, sign: false });
    data.append(i32 { mag: 463, sign: false });
    data.append(i32 { mag: 28, sign: false });
    data.append(i32 { mag: 755, sign: false });
    data.append(i32 { mag: 958, sign: false });
    data.append(i32 { mag: 979, sign: false });
    data.append(i32 { mag: 299, sign: false });
    data.append(i32 { mag: 172, sign: false });
    data.append(i32 { mag: 118, sign: false });
    data.append(i32 { mag: 400, sign: false });
    data.append(i32 { mag: 528, sign: false });
    data.append(i32 { mag: 379, sign: false });
    data.append(i32 { mag: 850, sign: false });
    data.append(i32 { mag: 970, sign: false });
    data.append(i32 { mag: 477, sign: false });
    data.append(i32 { mag: 983, sign: false });
    data.append(i32 { mag: 729, sign: false });
    data.append(i32 { mag: 541, sign: false });
    let extra = Option::<ExtraParams>::None(());
    let inputs = TensorTrait::new(shape.span(), data.span(), extra);

   
    // SET WEIGHTS
    let mut shape = ArrayTrait::<usize>::new();
    shape.append(kernel_size); 
    shape.append(kernel_size);
    shape.append(n_channels);
    shape.append(n_filters);
    let mut data = ArrayTrait::new(); // 3 * 3 * 3 * 2
    data.append(i32 { mag: 5, sign: false });
    data.append(i32 { mag: 18, sign: false });
    data.append(i32 { mag: 80, sign: true });
    data.append(i32 { mag: 137, sign: false });
    data.append(i32 { mag: 157, sign: false });
    data.append(i32 { mag: 46, sign: false });
    data.append(i32 { mag: 103, sign: true });
    data.append(i32 { mag: 84, sign: true });
    data.append(i32 { mag: 6, sign: false });
    data.append(i32 { mag: 66, sign: true });
    data.append(i32 { mag: 279, sign: true });
    data.append(i32 { mag: 153, sign: false });
    data.append(i32 { mag: 75, sign: false });
    data.append(i32 { mag: 154, sign: false });
    data.append(i32 { mag: 105, sign: true });
    data.append(i32 { mag: 201, sign: false });
    data.append(i32 { mag: 168, sign: true });
    data.append(i32 { mag: 284, sign: false });
    data.append(i32 { mag: 185, sign: true });
    data.append(i32 { mag: 352, sign: false });
    data.append(i32 { mag: 95, sign: true });
    data.append(i32 { mag: 245, sign: false });
    data.append(i32 { mag: 125, sign: false });
    data.append(i32 { mag: 300, sign: false });
    data.append(i32 { mag: 106, sign: true });
    data.append(i32 { mag: 84, sign: true });
    data.append(i32 { mag: 33, sign: false });
    data.append(i32 { mag: 102, sign: true });
    data.append(i32 { mag: 15, sign: false });
    data.append(i32 { mag: 103, sign: true });
    data.append(i32 { mag: 129, sign: false });
    data.append(i32 { mag: 4, sign: false });
    data.append(i32 { mag: 317, sign: true });
    data.append(i32 { mag: 99, sign: true });
    data.append(i32 { mag: 109, sign: true });
    data.append(i32 { mag: 70, sign: true });
    data.append(i32 { mag: 136, sign: true });
    data.append(i32 { mag: 13, sign: true });
    data.append(i32 { mag: 132, sign: false });
    data.append(i32 { mag: 139, sign: true });
    data.append(i32 { mag: 347, sign: false });
    data.append(i32 { mag: 77, sign: true });
    data.append(i32 { mag: 186, sign: false });
    data.append(i32 { mag: 177, sign: false });
    data.append(i32 { mag: 211, sign: false });
    data.append(i32 { mag: 203, sign: false });
    data.append(i32 { mag: 267, sign: false });
    data.append(i32 { mag: 65, sign: true });
    data.append(i32 { mag: 202, sign: true });
    data.append(i32 { mag: 207, sign: false });
    data.append(i32 { mag: 179, sign: true });
    data.append(i32 { mag: 77, sign: true });
    data.append(i32 { mag: 202, sign: true });
    data.append(i32 { mag: 203, sign: false });
    let extra = Option::<ExtraParams>::None(());
    let weights = TensorTrait::new(shape.span(), data.span(), extra);

    // SET BIAS 
    let mut shape = ArrayTrait::<usize>::new();
    shape.append(n_filters);
    let mut data = ArrayTrait::new();
    data.append(i32 { mag: 0, sign: false });
    data.append(i32 { mag: 0, sign: false });
    let extra = Option::<ExtraParams>::None(());
    let bias = TensorTrait::new(shape.span(), data.span(), extra);

    let result = NNTrait::convint(inputs, weights, bias, kernel_size, 1).data;
    assert((*result[0]).into() == -470578, 'result[0] = -470578');
    assert((*result[1]).into() == 879410, 'result[1] = 879410');
    assert((*result[2]).into() == -228839, 'result[2] = -228839');
    assert((*result[3]).into() == 921604, 'result[3] = 921604');
    assert((*result[4]).into() == -440140, 'result[4] = -440140');
    assert((*result[5]).into() == 1071822, 'result[5] = 1071822');
    assert((*result[6]).into() == -379896, 'result[6] = -379896');
    assert((*result[7]).into() == 1107852, 'result[7] = 1107852');
    assert((*result[8]).into() == -449567, 'result[8] = -449567');
    assert((*result[9]).into() == 1032219, 'result[9] = 1032219');
    assert((*result[10]).into() == 17910, 'result[10] = 17910');
    assert((*result[11]).into() == 496684, 'result[11] = 496684');
    assert((*result[12]).into() == -166165, 'result[12] = -166165');
    assert((*result[13]).into() == 425948, 'result[13] = 425948');
    assert((*result[14]).into() == -790618, 'result[14] = -790618');
    assert((*result[15]).into() == 731256, 'result[15] = 731256');
    assert((*result[16]).into() == -397018, 'result[16] = -397018');
    assert((*result[17]).into() == 1257936, 'result[17] = 1257936');
}
